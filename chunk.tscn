[gd_scene load_steps=7 format=3 uid="uid://vjll7u27jgg4"]

[ext_resource type="Texture2D" uid="uid://cylbaq8hkng4e" path="res://floor.png" id="1_kdh3y"]
[ext_resource type="Script" uid="uid://ccbupqlgc4bbv" path="res://chunk.gd" id="2_eat54"]

[sub_resource type="Shader" id="Shader_kdh3y"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.4.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_nearest, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_nearest, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_nearest, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

varying vec3 position;

void vertex() {
	UV *= VERTEX.xz * vec2(2,2);
}

void fragment() {
	vec2 base_uv = mod(UV, 1);

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_eat54"]
render_priority = 0
shader = SubResource("Shader_kdh3y")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/texture_albedo = ExtResource("1_kdh3y")
shader_parameter/albedo_texture_size = Vector2i(32, 32)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="PlaneMesh" id="PlaneMesh_a0kup"]
material = SubResource("ShaderMaterial_eat54")
size = Vector2(32, 32)

[sub_resource type="BoxMesh" id="BoxMesh_eat54"]

[node name="chunk" type="MeshInstance3D"]
mesh = SubResource("PlaneMesh_a0kup")
script = ExtResource("2_eat54")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0.5, 0.5)
mesh = SubResource("BoxMesh_eat54")
